name: Teste versionamento docker hub

on:
  push:
    branches: [ "michael" ]

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    # Criar imagem da aplicação Registro de Serviço
    - name: Criar imagem Registro Service
      run: cd teste-microservice/registro/ && docker build -t solinfbroker/registro-solinfbroker:0.0.1 -t solinfbroker/registro-solinfbroker:latest .

    # visualizar imagem
    - name: visualizar imagem
      run: docker image ls
      
    # Logar na conta do DockerHub
    - name: Logar no DockerHub
      run: docker login -u ${{secrets.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_HUB_PASSWORD}} docker.io
    
    # Subir imagem do registro para o dockerhub 
    - name: Subir imagem do registro para o dockerhub
      run: docker push solinfbroker/registro-solinfbroker --all-tags

    - name: print container
      run: docker image ls

  gerar-release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: mostrar releases
      id: tag-release
      run: |
         VERSAO_API=$(gh release view --json tagName -q ".tagName" || echo '0.0.1')
         echo "VERSAO_API=${VERSAO_API}" >> $GITHUB_ENV
         echo "::set-output name=VERSAO_API::$VERSAO_API"
      env:
        GH_TOKEN: ${{ secrets.TOKEN_MICHAEL }}
      # run:  echo 'VERSAO_API=gh release view --json tagName -q ".tagName"'' >> "$GITHUB_ENV" #echo gh release view --json tagName -q ".tagName"
      # env:
      #   GH_TOKEN: ${{ secrets.TOKEN_MICHAEL }

    - name: criar release
      run: gh release create ${{ steps.tag-release.outputs.VERSAO_API }} --title "v${{ steps.tag-release.outputs.VERSAO_API }} (teste)" --notes "teste de release"
      env:
        GH_TOKEN: ${{ secrets.TOKEN_MICHAEL }}
      
    # - name: criar release
    #   run: gh release create $VERSAO_API --title "v$VERSAO_API (teste)" --notes "teste de release"
    #   env:
    #     GH_TOKEN: ${{ secrets.TOKEN_MICHAEL }}
    #     # VERSAO_API: ${{ steps.tag-release.outputs.VERSAO_API }

  # teste:
  #   needs: build
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3

  #   # Baixar imagem
  #   - name: Baixar imagem
  #     run: docker pull solinfbroker/registro-solinfbroker:latest

  #   - name: print container
  #     run: docker image ls
  