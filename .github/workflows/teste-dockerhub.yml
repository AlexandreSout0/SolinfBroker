name: Teste versionamento docker hub

on:
  push:
    branches: [ "michael" ]

jobs:

  gerar-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Bump version and push tag
      id: tag_version
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_MICHAEL }}
        WITH_V: true
        DEFAULT_BUMP: patch

  gerar-release:
    needs: gerar-version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: criar release
      run: echo ${{steps.tag_version.outputs.new_tag}} 


  # build:

  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3

  #   # Criar imagem da aplicação Registro de Serviço
  #   - name: Criar imagem Registro Service
  #     run: cd teste-microservice/registro/ && docker build -t solinfbroker/registro-solinfbroker:0.0.1 -t solinfbroker/registro-solinfbroker:latest .

  #   # visualizar imagem
  #   - name: visualizar imagem
  #     run: docker image ls
      
  #   # Logar na conta do DockerHub
  #   - name: Logar no DockerHub
  #     run: docker login -u ${{secrets.DOCKER_HUB_USERNAME}} -p ${{secrets.DOCKER_HUB_PASSWORD}} docker.io
    
  #   # Subir imagem do registro para o dockerhub 
  #   - name: Subir imagem do registro para o dockerhub
  #     run: docker push solinfbroker/registro-solinfbroker --all-tags

  #   - name: print container
  #     run: docker image ls

  # gerar-release:
  #   needs: build
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: criar release
  #     run: gh release create v0.0.1 --title "v0.0.1 (teste)" --notes "teste de release"
  #     env:
  #       GH_TOKEN: ${{ secrets.TOKEN_MICHAEL }}

  # teste:
  #   needs: build
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3

  #   # Baixar imagem
  #   - name: Baixar imagem
  #     run: docker pull solinfbroker/registro-solinfbroker:latest

  #   - name: print container
  #     run: docker image ls
  